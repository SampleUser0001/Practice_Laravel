1654604614
aG%2BmXEj3d4%3A06f0961a5477b1e675594667afdf6988-5181b9b1d2ce347cdfc1d97fc4f1ace0
s:36488:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjUxODFiOWIxZDJjZTM0N2NkZmMxZDk3ZmM0ZjFhY2UwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTg6IkNhbGxFeHByZXNzaW9uLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjU1OiJ2ZW5kb3IvdHdpZy90d2lnL3NyYy9Ob2RlL0V4cHJlc3Npb24vQ2FsbEV4cHJlc3Npb24ucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czoxMjYxNDoiPD9waHAKCi8qCiAqIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIFR3aWcuCiAqCiAqIChjKSBGYWJpZW4gUG90ZW5jaWVyCiAqCiAqIEZvciB0aGUgZnVsbCBjb3B5cmlnaHQgYW5kIGxpY2Vuc2UgaW5mb3JtYXRpb24sIHBsZWFzZSB2aWV3IHRoZSBMSUNFTlNFCiAqIGZpbGUgdGhhdCB3YXMgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHNvdXJjZSBjb2RlLgogKi8KCm5hbWVzcGFjZSBUd2lnXE5vZGVcRXhwcmVzc2lvbjsKCnVzZSBUd2lnXENvbXBpbGVyOwp1c2UgVHdpZ1xFcnJvclxTeW50YXhFcnJvcjsKdXNlIFR3aWdcRXh0ZW5zaW9uXEV4dGVuc2lvbkludGVyZmFjZTsKdXNlIFR3aWdcTm9kZVxOb2RlOwoKYWJzdHJhY3QgY2xhc3MgQ2FsbEV4cHJlc3Npb24gZXh0ZW5kcyBBYnN0cmFjdEV4cHJlc3Npb24KewogICAgcHJpdmF0ZSAkcmVmbGVjdG9yOwoKICAgIHByb3RlY3RlZCBmdW5jdGlvbiBjb21waWxlQ2FsbGFibGUoQ29tcGlsZXIgJGNvbXBpbGVyKQogICAgewogICAgICAgICRjYWxsYWJsZSA9ICR0aGlzLT5nZXRBdHRyaWJ1dGUoJ2NhbGxhYmxlJyk7CgogICAgICAgICRjbG9zaW5nUGFyZW50aGVzaXMgPSBmYWxzZTsKICAgICAgICAkaXNBcnJheSA9IGZhbHNlOwogICAgICAgIGlmIChcaXNfc3RyaW5nKCRjYWxsYWJsZSkgJiYgZmFsc2UgPT09IHN0cnBvcygkY2FsbGFibGUsICc6OicpKSB7CiAgICAgICAgICAgICRjb21waWxlci0+cmF3KCRjYWxsYWJsZSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbGlzdCgkciwgJGNhbGxhYmxlKSA9ICR0aGlzLT5yZWZsZWN0Q2FsbGFibGUoJGNhbGxhYmxlKTsKICAgICAgICAgICAgaWYgKCRyIGluc3RhbmNlb2YgXFJlZmxlY3Rpb25NZXRob2QgJiYgXGlzX3N0cmluZygkY2FsbGFibGVbMF0pKSB7CiAgICAgICAgICAgICAgICBpZiAoJHItPmlzU3RhdGljKCkpIHsKICAgICAgICAgICAgICAgICAgICAkY29tcGlsZXItPnJhdyhzcHJpbnRmKCclczo6JXMnLCAkY2FsbGFibGVbMF0sICRjYWxsYWJsZVsxXSkpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAkY29tcGlsZXItPnJhdyhzcHJpbnRmKCckdGhpcy0+ZW52LT5nZXRSdW50aW1lKFwnJXNcJyktPiVzJywgJGNhbGxhYmxlWzBdLCAkY2FsbGFibGVbMV0pKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlaWYgKCRyIGluc3RhbmNlb2YgXFJlZmxlY3Rpb25NZXRob2QgJiYgJGNhbGxhYmxlWzBdIGluc3RhbmNlb2YgRXh0ZW5zaW9uSW50ZXJmYWNlKSB7CiAgICAgICAgICAgICAgICAvLyBGb3IgQkMvRkMgd2l0aCBuYW1lc3BhY2VkIGFsaWFzZXMKICAgICAgICAgICAgICAgICRjbGFzcyA9IChuZXcgXFJlZmxlY3Rpb25DbGFzcyhcZ2V0X2NsYXNzKCRjYWxsYWJsZVswXSkpKS0+bmFtZTsKICAgICAgICAgICAgICAgIGlmICghJGNvbXBpbGVyLT5nZXRFbnZpcm9ubWVudCgpLT5oYXNFeHRlbnNpb24oJGNsYXNzKSkgewogICAgICAgICAgICAgICAgICAgIC8vIENvbXBpbGUgYSBub24tb3B0aW1pemVkIGNhbGwgdG8gdHJpZ2dlciBhIFxUd2lnXEVycm9yXFJ1bnRpbWVFcnJvciwgd2hpY2ggY2Fubm90IGJlIGEgY29tcGlsZS10aW1lIGVycm9yCiAgICAgICAgICAgICAgICAgICAgJGNvbXBpbGVyLT5yYXcoc3ByaW50ZignJHRoaXMtPmVudi0+Z2V0RXh0ZW5zaW9uKFwnJXNcJyknLCAkY2xhc3MpKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgJGNvbXBpbGVyLT5yYXcoc3ByaW50ZignJHRoaXMtPmV4dGVuc2lvbnNbXCclc1wnXScsIGx0cmltKCRjbGFzcywgJ1xcJykpKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAkY29tcGlsZXItPnJhdyhzcHJpbnRmKCctPiVzJywgJGNhbGxhYmxlWzFdKSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAkY2xvc2luZ1BhcmVudGhlc2lzID0gdHJ1ZTsKICAgICAgICAgICAgICAgICRpc0FycmF5ID0gdHJ1ZTsKICAgICAgICAgICAgICAgICRjb21waWxlci0+cmF3KHNwcmludGYoJ2NhbGxfdXNlcl9mdW5jX2FycmF5KCR0aGlzLT5lbnYtPmdldCVzKFwnJXNcJyktPmdldENhbGxhYmxlKCksICcsIHVjZmlyc3QoJHRoaXMtPmdldEF0dHJpYnV0ZSgndHlwZScpKSwgJHRoaXMtPmdldEF0dHJpYnV0ZSgnbmFtZScpKSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgICR0aGlzLT5jb21waWxlQXJndW1lbnRzKCRjb21waWxlciwgJGlzQXJyYXkpOwoKICAgICAgICBpZiAoJGNsb3NpbmdQYXJlbnRoZXNpcykgewogICAgICAgICAgICAkY29tcGlsZXItPnJhdygnKScpOwogICAgICAgIH0KICAgIH0KCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gY29tcGlsZUFyZ3VtZW50cyhDb21waWxlciAkY29tcGlsZXIsICRpc0FycmF5ID0gZmFsc2UpCiAgICB7CiAgICAgICAgJGNvbXBpbGVyLT5yYXcoJGlzQXJyYXkgPyAnWycgOiAnKCcpOwoKICAgICAgICAkZmlyc3QgPSB0cnVlOwoKICAgICAgICBpZiAoJHRoaXMtPmhhc0F0dHJpYnV0ZSgnbmVlZHNfZW52aXJvbm1lbnQnKSAmJiAkdGhpcy0+Z2V0QXR0cmlidXRlKCduZWVkc19lbnZpcm9ubWVudCcpKSB7CiAgICAgICAgICAgICRjb21waWxlci0+cmF3KCckdGhpcy0+ZW52Jyk7CiAgICAgICAgICAgICRmaXJzdCA9IGZhbHNlOwogICAgICAgIH0KCiAgICAgICAgaWYgKCR0aGlzLT5oYXNBdHRyaWJ1dGUoJ25lZWRzX2NvbnRleHQnKSAmJiAkdGhpcy0+Z2V0QXR0cmlidXRlKCduZWVkc19jb250ZXh0JykpIHsKICAgICAgICAgICAgaWYgKCEkZmlyc3QpIHsKICAgICAgICAgICAgICAgICRjb21waWxlci0+cmF3KCcsICcpOwogICAgICAgICAgICB9CiAgICAgICAgICAgICRjb21waWxlci0+cmF3KCckY29udGV4dCcpOwogICAgICAgICAgICAkZmlyc3QgPSBmYWxzZTsKICAgICAgICB9CgogICAgICAgIGlmICgkdGhpcy0+aGFzQXR0cmlidXRlKCdhcmd1bWVudHMnKSkgewogICAgICAgICAgICBmb3JlYWNoICgkdGhpcy0+Z2V0QXR0cmlidXRlKCdhcmd1bWVudHMnKSBhcyAkYXJndW1lbnQpIHsKICAgICAgICAgICAgICAgIGlmICghJGZpcnN0KSB7CiAgICAgICAgICAgICAgICAgICAgJGNvbXBpbGVyLT5yYXcoJywgJyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAkY29tcGlsZXItPnN0cmluZygkYXJndW1lbnQpOwogICAgICAgICAgICAgICAgJGZpcnN0ID0gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmICgkdGhpcy0+aGFzTm9kZSgnbm9kZScpKSB7CiAgICAgICAgICAgIGlmICghJGZpcnN0KSB7CiAgICAgICAgICAgICAgICAkY29tcGlsZXItPnJhdygnLCAnKTsKICAgICAgICAgICAgfQogICAgICAgICAgICAkY29tcGlsZXItPnN1YmNvbXBpbGUoJHRoaXMtPmdldE5vZGUoJ25vZGUnKSk7CiAgICAgICAgICAgICRmaXJzdCA9IGZhbHNlOwogICAgICAgIH0KCiAgICAgICAgaWYgKCR0aGlzLT5oYXNOb2RlKCdhcmd1bWVudHMnKSkgewogICAgICAgICAgICAkY2FsbGFibGUgPSAkdGhpcy0+Z2V0QXR0cmlidXRlKCdjYWxsYWJsZScpOwogICAgICAgICAgICAkYXJndW1lbnRzID0gJHRoaXMtPmdldEFyZ3VtZW50cygkY2FsbGFibGUsICR0aGlzLT5nZXROb2RlKCdhcmd1bWVudHMnKSk7CiAgICAgICAgICAgIGZvcmVhY2ggKCRhcmd1bWVudHMgYXMgJG5vZGUpIHsKICAgICAgICAgICAgICAgIGlmICghJGZpcnN0KSB7CiAgICAgICAgICAgICAgICAgICAgJGNvbXBpbGVyLT5yYXcoJywgJyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAkY29tcGlsZXItPnN1YmNvbXBpbGUoJG5vZGUpOwogICAgICAgICAgICAgICAgJGZpcnN0ID0gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgICRjb21waWxlci0+cmF3KCRpc0FycmF5ID8gJ10nIDogJyknKTsKICAgIH0KCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gZ2V0QXJndW1lbnRzKCRjYWxsYWJsZSwgJGFyZ3VtZW50cykKICAgIHsKICAgICAgICAkY2FsbFR5cGUgPSAkdGhpcy0+Z2V0QXR0cmlidXRlKCd0eXBlJyk7CiAgICAgICAgJGNhbGxOYW1lID0gJHRoaXMtPmdldEF0dHJpYnV0ZSgnbmFtZScpOwoKICAgICAgICAkcGFyYW1ldGVycyA9IFtdOwogICAgICAgICRuYW1lZCA9IGZhbHNlOwogICAgICAgIGZvcmVhY2ggKCRhcmd1bWVudHMgYXMgJG5hbWUgPT4gJG5vZGUpIHsKICAgICAgICAgICAgaWYgKCFcaXNfaW50KCRuYW1lKSkgewogICAgICAgICAgICAgICAgJG5hbWVkID0gdHJ1ZTsKICAgICAgICAgICAgICAgICRuYW1lID0gJHRoaXMtPm5vcm1hbGl6ZU5hbWUoJG5hbWUpOwogICAgICAgICAgICB9IGVsc2VpZiAoJG5hbWVkKSB7CiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3Ioc3ByaW50ZignUG9zaXRpb25hbCBhcmd1bWVudHMgY2Fubm90IGJlIHVzZWQgYWZ0ZXIgbmFtZWQgYXJndW1lbnRzIGZvciAlcyAiJXMiLicsICRjYWxsVHlwZSwgJGNhbGxOYW1lKSwgJHRoaXMtPmdldFRlbXBsYXRlTGluZSgpLCAkdGhpcy0+Z2V0U291cmNlQ29udGV4dCgpKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgJHBhcmFtZXRlcnNbJG5hbWVdID0gJG5vZGU7CiAgICAgICAgfQoKICAgICAgICAkaXNWYXJpYWRpYyA9ICR0aGlzLT5oYXNBdHRyaWJ1dGUoJ2lzX3ZhcmlhZGljJykgJiYgJHRoaXMtPmdldEF0dHJpYnV0ZSgnaXNfdmFyaWFkaWMnKTsKICAgICAgICBpZiAoISRuYW1lZCAmJiAhJGlzVmFyaWFkaWMpIHsKICAgICAgICAgICAgcmV0dXJuICRwYXJhbWV0ZXJzOwogICAgICAgIH0KCiAgICAgICAgaWYgKCEkY2FsbGFibGUpIHsKICAgICAgICAgICAgaWYgKCRuYW1lZCkgewogICAgICAgICAgICAgICAgJG1lc3NhZ2UgPSBzcHJpbnRmKCdOYW1lZCBhcmd1bWVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgZm9yICVzICIlcyIuJywgJGNhbGxUeXBlLCAkY2FsbE5hbWUpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgJG1lc3NhZ2UgPSBzcHJpbnRmKCdBcmJpdHJhcnkgcG9zaXRpb25hbCBhcmd1bWVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgZm9yICVzICIlcyIuJywgJGNhbGxUeXBlLCAkY2FsbE5hbWUpOwogICAgICAgICAgICB9CgogICAgICAgICAgICB0aHJvdyBuZXcgXExvZ2ljRXhjZXB0aW9uKCRtZXNzYWdlKTsKICAgICAgICB9CgogICAgICAgIGxpc3QoJGNhbGxhYmxlUGFyYW1ldGVycywgJGlzUGhwVmFyaWFkaWMpID0gJHRoaXMtPmdldENhbGxhYmxlUGFyYW1ldGVycygkY2FsbGFibGUsICRpc1ZhcmlhZGljKTsKICAgICAgICAkYXJndW1lbnRzID0gW107CiAgICAgICAgJG5hbWVzID0gW107CiAgICAgICAgJG1pc3NpbmdBcmd1bWVudHMgPSBbXTsKICAgICAgICAkb3B0aW9uYWxBcmd1bWVudHMgPSBbXTsKICAgICAgICAkcG9zID0gMDsKICAgICAgICBmb3JlYWNoICgkY2FsbGFibGVQYXJhbWV0ZXJzIGFzICRjYWxsYWJsZVBhcmFtZXRlcikgewogICAgICAgICAgICAkbmFtZSA9ICR0aGlzLT5ub3JtYWxpemVOYW1lKCRjYWxsYWJsZVBhcmFtZXRlci0+bmFtZSk7CiAgICAgICAgICAgIGlmIChcUEhQX1ZFUlNJT05fSUQgPj0gODAwMDAgJiYgJ3JhbmdlJyA9PT0gJGNhbGxhYmxlKSB7CiAgICAgICAgICAgICAgICBpZiAoJ3N0YXJ0JyA9PT0gJG5hbWUpIHsKICAgICAgICAgICAgICAgICAgICAkbmFtZSA9ICdsb3cnOwogICAgICAgICAgICAgICAgfSBlbHNlaWYgKCdlbmQnID09PSAkbmFtZSkgewogICAgICAgICAgICAgICAgICAgICRuYW1lID0gJ2hpZ2gnOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICAkbmFtZXNbXSA9ICRuYW1lOwoKICAgICAgICAgICAgaWYgKFxhcnJheV9rZXlfZXhpc3RzKCRuYW1lLCAkcGFyYW1ldGVycykpIHsKICAgICAgICAgICAgICAgIGlmIChcYXJyYXlfa2V5X2V4aXN0cygkcG9zLCAkcGFyYW1ldGVycykpIHsKICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3Ioc3ByaW50ZignQXJndW1lbnQgIiVzIiBpcyBkZWZpbmVkIHR3aWNlIGZvciAlcyAiJXMiLicsICRuYW1lLCAkY2FsbFR5cGUsICRjYWxsTmFtZSksICR0aGlzLT5nZXRUZW1wbGF0ZUxpbmUoKSwgJHRoaXMtPmdldFNvdXJjZUNvbnRleHQoKSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKFxjb3VudCgkbWlzc2luZ0FyZ3VtZW50cykpIHsKICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3Ioc3ByaW50ZigKICAgICAgICAgICAgICAgICAgICAgICAgJ0FyZ3VtZW50ICIlcyIgY291bGQgbm90IGJlIGFzc2lnbmVkIGZvciAlcyAiJXMoJXMpIiBiZWNhdXNlIGl0IGlzIG1hcHBlZCB0byBhbiBpbnRlcm5hbCBQSFAgZnVuY3Rpb24gd2hpY2ggY2Fubm90IGRldGVybWluZSBkZWZhdWx0IHZhbHVlIGZvciBvcHRpb25hbCBhcmd1bWVudCVzICIlcyIuJywKICAgICAgICAgICAgICAgICAgICAgICAgJG5hbWUsICRjYWxsVHlwZSwgJGNhbGxOYW1lLCBpbXBsb2RlKCcsICcsICRuYW1lcyksIFxjb3VudCgkbWlzc2luZ0FyZ3VtZW50cykgPiAxID8gJ3MnIDogJycsIGltcGxvZGUoJyIsICInLCAkbWlzc2luZ0FyZ3VtZW50cykKICAgICAgICAgICAgICAgICAgICApLCAkdGhpcy0+Z2V0VGVtcGxhdGVMaW5lKCksICR0aGlzLT5nZXRTb3VyY2VDb250ZXh0KCkpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICRhcmd1bWVudHMgPSBhcnJheV9tZXJnZSgkYXJndW1lbnRzLCAkb3B0aW9uYWxBcmd1bWVudHMpOwogICAgICAgICAgICAgICAgJGFyZ3VtZW50c1tdID0gJHBhcmFtZXRlcnNbJG5hbWVdOwogICAgICAgICAgICAgICAgdW5zZXQoJHBhcmFtZXRlcnNbJG5hbWVdKTsKICAgICAgICAgICAgICAgICRvcHRpb25hbEFyZ3VtZW50cyA9IFtdOwogICAgICAgICAgICB9IGVsc2VpZiAoXGFycmF5X2tleV9leGlzdHMoJHBvcywgJHBhcmFtZXRlcnMpKSB7CiAgICAgICAgICAgICAgICAkYXJndW1lbnRzID0gYXJyYXlfbWVyZ2UoJGFyZ3VtZW50cywgJG9wdGlvbmFsQXJndW1lbnRzKTsKICAgICAgICAgICAgICAgICRhcmd1bWVudHNbXSA9ICRwYXJhbWV0ZXJzWyRwb3NdOwogICAgICAgICAgICAgICAgdW5zZXQoJHBhcmFtZXRlcnNbJHBvc10pOwogICAgICAgICAgICAgICAgJG9wdGlvbmFsQXJndW1lbnRzID0gW107CiAgICAgICAgICAgICAgICArKyRwb3M7CiAgICAgICAgICAgIH0gZWxzZWlmICgkY2FsbGFibGVQYXJhbWV0ZXItPmlzRGVmYXVsdFZhbHVlQXZhaWxhYmxlKCkpIHsKICAgICAgICAgICAgICAgICRvcHRpb25hbEFyZ3VtZW50c1tdID0gbmV3IENvbnN0YW50RXhwcmVzc2lvbigkY2FsbGFibGVQYXJhbWV0ZXItPmdldERlZmF1bHRWYWx1ZSgpLCAtMSk7CiAgICAgICAgICAgIH0gZWxzZWlmICgkY2FsbGFibGVQYXJhbWV0ZXItPmlzT3B0aW9uYWwoKSkgewogICAgICAgICAgICAgICAgaWYgKGVtcHR5KCRwYXJhbWV0ZXJzKSkgewogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAkbWlzc2luZ0FyZ3VtZW50c1tdID0gJG5hbWU7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3Ioc3ByaW50ZignVmFsdWUgZm9yIGFyZ3VtZW50ICIlcyIgaXMgcmVxdWlyZWQgZm9yICVzICIlcyIuJywgJG5hbWUsICRjYWxsVHlwZSwgJGNhbGxOYW1lKSwgJHRoaXMtPmdldFRlbXBsYXRlTGluZSgpLCAkdGhpcy0+Z2V0U291cmNlQ29udGV4dCgpKTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKCRpc1ZhcmlhZGljKSB7CiAgICAgICAgICAgICRhcmJpdHJhcnlBcmd1bWVudHMgPSAkaXNQaHBWYXJpYWRpYyA/IG5ldyBWYXJpYWRpY0V4cHJlc3Npb24oW10sIC0xKSA6IG5ldyBBcnJheUV4cHJlc3Npb24oW10sIC0xKTsKICAgICAgICAgICAgZm9yZWFjaCAoJHBhcmFtZXRlcnMgYXMgJGtleSA9PiAkdmFsdWUpIHsKICAgICAgICAgICAgICAgIGlmIChcaXNfaW50KCRrZXkpKSB7CiAgICAgICAgICAgICAgICAgICAgJGFyYml0cmFyeUFyZ3VtZW50cy0+YWRkRWxlbWVudCgkdmFsdWUpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAkYXJiaXRyYXJ5QXJndW1lbnRzLT5hZGRFbGVtZW50KCR2YWx1ZSwgbmV3IENvbnN0YW50RXhwcmVzc2lvbigka2V5LCAtMSkpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdW5zZXQoJHBhcmFtZXRlcnNbJGtleV0pOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoJGFyYml0cmFyeUFyZ3VtZW50cy0+Y291bnQoKSkgewogICAgICAgICAgICAgICAgJGFyZ3VtZW50cyA9IGFycmF5X21lcmdlKCRhcmd1bWVudHMsICRvcHRpb25hbEFyZ3VtZW50cyk7CiAgICAgICAgICAgICAgICAkYXJndW1lbnRzW10gPSAkYXJiaXRyYXJ5QXJndW1lbnRzOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAoIWVtcHR5KCRwYXJhbWV0ZXJzKSkgewogICAgICAgICAgICAkdW5rbm93blBhcmFtZXRlciA9IG51bGw7CiAgICAgICAgICAgIGZvcmVhY2ggKCRwYXJhbWV0ZXJzIGFzICRwYXJhbWV0ZXIpIHsKICAgICAgICAgICAgICAgIGlmICgkcGFyYW1ldGVyIGluc3RhbmNlb2YgTm9kZSkgewogICAgICAgICAgICAgICAgICAgICR1bmtub3duUGFyYW1ldGVyID0gJHBhcmFtZXRlcjsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKAogICAgICAgICAgICAgICAgc3ByaW50ZigKICAgICAgICAgICAgICAgICAgICAnVW5rbm93biBhcmd1bWVudCVzICIlcyIgZm9yICVzICIlcyglcykiLicsCiAgICAgICAgICAgICAgICAgICAgXGNvdW50KCRwYXJhbWV0ZXJzKSA+IDEgPyAncycgOiAnJywgaW1wbG9kZSgnIiwgIicsIGFycmF5X2tleXMoJHBhcmFtZXRlcnMpKSwgJGNhbGxUeXBlLCAkY2FsbE5hbWUsIGltcGxvZGUoJywgJywgJG5hbWVzKQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICR1bmtub3duUGFyYW1ldGVyID8gJHVua25vd25QYXJhbWV0ZXItPmdldFRlbXBsYXRlTGluZSgpIDogJHRoaXMtPmdldFRlbXBsYXRlTGluZSgpLAogICAgICAgICAgICAgICAgJHVua25vd25QYXJhbWV0ZXIgPyAkdW5rbm93blBhcmFtZXRlci0+Z2V0U291cmNlQ29udGV4dCgpIDogJHRoaXMtPmdldFNvdXJjZUNvbnRleHQoKQogICAgICAgICAgICApOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICRhcmd1bWVudHM7CiAgICB9CgogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIG5vcm1hbGl6ZU5hbWUoJG5hbWUpCiAgICB7CiAgICAgICAgcmV0dXJuIHN0cnRvbG93ZXIocHJlZ19yZXBsYWNlKFsnLyhbQS1aXSspKFtBLVpdW2Etel0pLycsICcvKFthLXpcZF0pKFtBLVpdKS8nXSwgWydcXDFfXFwyJywgJ1xcMV9cXDInXSwgJG5hbWUpKTsKICAgIH0KCiAgICBwcml2YXRlIGZ1bmN0aW9uIGdldENhbGxhYmxlUGFyYW1ldGVycygkY2FsbGFibGUsIGJvb2wgJGlzVmFyaWFkaWMpOiBhcnJheQogICAgewogICAgICAgIGxpc3QoJHIpID0gJHRoaXMtPnJlZmxlY3RDYWxsYWJsZSgkY2FsbGFibGUpOwogICAgICAgIGlmIChudWxsID09PSAkcikgewogICAgICAgICAgICByZXR1cm4gW1tdLCBmYWxzZV07CiAgICAgICAgfQoKICAgICAgICAkcGFyYW1ldGVycyA9ICRyLT5nZXRQYXJhbWV0ZXJzKCk7CiAgICAgICAgaWYgKCR0aGlzLT5oYXNOb2RlKCdub2RlJykpIHsKICAgICAgICAgICAgYXJyYXlfc2hpZnQoJHBhcmFtZXRlcnMpOwogICAgICAgIH0KICAgICAgICBpZiAoJHRoaXMtPmhhc0F0dHJpYnV0ZSgnbmVlZHNfZW52aXJvbm1lbnQnKSAmJiAkdGhpcy0+Z2V0QXR0cmlidXRlKCduZWVkc19lbnZpcm9ubWVudCcpKSB7CiAgICAgICAgICAgIGFycmF5X3NoaWZ0KCRwYXJhbWV0ZXJzKTsKICAgICAgICB9CiAgICAgICAgaWYgKCR0aGlzLT5oYXNBdHRyaWJ1dGUoJ25lZWRzX2NvbnRleHQnKSAmJiAkdGhpcy0+Z2V0QXR0cmlidXRlKCduZWVkc19jb250ZXh0JykpIHsKICAgICAgICAgICAgYXJyYXlfc2hpZnQoJHBhcmFtZXRlcnMpOwogICAgICAgIH0KICAgICAgICBpZiAoJHRoaXMtPmhhc0F0dHJpYnV0ZSgnYXJndW1lbnRzJykgJiYgbnVsbCAhPT0gJHRoaXMtPmdldEF0dHJpYnV0ZSgnYXJndW1lbnRzJykpIHsKICAgICAgICAgICAgZm9yZWFjaCAoJHRoaXMtPmdldEF0dHJpYnV0ZSgnYXJndW1lbnRzJykgYXMgJGFyZ3VtZW50KSB7CiAgICAgICAgICAgICAgICBhcnJheV9zaGlmdCgkcGFyYW1ldGVycyk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgJGlzUGhwVmFyaWFkaWMgPSBmYWxzZTsKICAgICAgICBpZiAoJGlzVmFyaWFkaWMpIHsKICAgICAgICAgICAgJGFyZ3VtZW50ID0gZW5kKCRwYXJhbWV0ZXJzKTsKICAgICAgICAgICAgJGlzQXJyYXkgPSAkYXJndW1lbnQgJiYgJGFyZ3VtZW50LT5oYXNUeXBlKCkgJiYgJ2FycmF5JyA9PT0gJGFyZ3VtZW50LT5nZXRUeXBlKCktPmdldE5hbWUoKTsKICAgICAgICAgICAgaWYgKCRpc0FycmF5ICYmICRhcmd1bWVudC0+aXNEZWZhdWx0VmFsdWVBdmFpbGFibGUoKSAmJiBbXSA9PT0gJGFyZ3VtZW50LT5nZXREZWZhdWx0VmFsdWUoKSkgewogICAgICAgICAgICAgICAgYXJyYXlfcG9wKCRwYXJhbWV0ZXJzKTsKICAgICAgICAgICAgfSBlbHNlaWYgKCRhcmd1bWVudCAmJiAkYXJndW1lbnQtPmlzVmFyaWFkaWMoKSkgewogICAgICAgICAgICAgICAgYXJyYXlfcG9wKCRwYXJhbWV0ZXJzKTsKICAgICAgICAgICAgICAgICRpc1BocFZhcmlhZGljID0gdHJ1ZTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICRjYWxsYWJsZU5hbWUgPSAkci0+bmFtZTsKICAgICAgICAgICAgICAgIGlmICgkciBpbnN0YW5jZW9mIFxSZWZsZWN0aW9uTWV0aG9kKSB7CiAgICAgICAgICAgICAgICAgICAgJGNhbGxhYmxlTmFtZSA9ICRyLT5nZXREZWNsYXJpbmdDbGFzcygpLT5uYW1lLic6OicuJGNhbGxhYmxlTmFtZTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgXExvZ2ljRXhjZXB0aW9uKHNwcmludGYoJ1RoZSBsYXN0IHBhcmFtZXRlciBvZiAiJXMiIGZvciAlcyAiJXMiIG11c3QgYmUgYW4gYXJyYXkgd2l0aCBkZWZhdWx0IHZhbHVlLCBlZy4gImFycmF5ICRhcmcgPSBbXSIuJywgJGNhbGxhYmxlTmFtZSwgJHRoaXMtPmdldEF0dHJpYnV0ZSgndHlwZScpLCAkdGhpcy0+Z2V0QXR0cmlidXRlKCduYW1lJykpKTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIFskcGFyYW1ldGVycywgJGlzUGhwVmFyaWFkaWNdOwogICAgfQoKICAgIHByaXZhdGUgZnVuY3Rpb24gcmVmbGVjdENhbGxhYmxlKCRjYWxsYWJsZSkKICAgIHsKICAgICAgICBpZiAobnVsbCAhPT0gJHRoaXMtPnJlZmxlY3RvcikgewogICAgICAgICAgICByZXR1cm4gJHRoaXMtPnJlZmxlY3RvcjsKICAgICAgICB9CgogICAgICAgIGlmIChcaXNfYXJyYXkoJGNhbGxhYmxlKSkgewogICAgICAgICAgICBpZiAoIW1ldGhvZF9leGlzdHMoJGNhbGxhYmxlWzBdLCAkY2FsbGFibGVbMV0pKSB7CiAgICAgICAgICAgICAgICAvLyBfX2NhbGwoKQogICAgICAgICAgICAgICAgcmV0dXJuIFtudWxsLCBbXV07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgJHIgPSBuZXcgXFJlZmxlY3Rpb25NZXRob2QoJGNhbGxhYmxlWzBdLCAkY2FsbGFibGVbMV0pOwogICAgICAgIH0gZWxzZWlmIChcaXNfb2JqZWN0KCRjYWxsYWJsZSkgJiYgISRjYWxsYWJsZSBpbnN0YW5jZW9mIFxDbG9zdXJlKSB7CiAgICAgICAgICAgICRyID0gbmV3IFxSZWZsZWN0aW9uT2JqZWN0KCRjYWxsYWJsZSk7CiAgICAgICAgICAgICRyID0gJHItPmdldE1ldGhvZCgnX19pbnZva2UnKTsKICAgICAgICAgICAgJGNhbGxhYmxlID0gWyRjYWxsYWJsZSwgJ19faW52b2tlJ107CiAgICAgICAgfSBlbHNlaWYgKFxpc19zdHJpbmcoJGNhbGxhYmxlKSAmJiBmYWxzZSAhPT0gJHBvcyA9IHN0cnBvcygkY2FsbGFibGUsICc6OicpKSB7CiAgICAgICAgICAgICRjbGFzcyA9IHN1YnN0cigkY2FsbGFibGUsIDAsICRwb3MpOwogICAgICAgICAgICAkbWV0aG9kID0gc3Vic3RyKCRjYWxsYWJsZSwgJHBvcyArIDIpOwogICAgICAgICAgICBpZiAoIW1ldGhvZF9leGlzdHMoJGNsYXNzLCAkbWV0aG9kKSkgewogICAgICAgICAgICAgICAgLy8gX19zdGF0aWNDYWxsKCkKICAgICAgICAgICAgICAgIHJldHVybiBbbnVsbCwgW11dOwogICAgICAgICAgICB9CiAgICAgICAgICAgICRyID0gbmV3IFxSZWZsZWN0aW9uTWV0aG9kKCRjYWxsYWJsZSk7CiAgICAgICAgICAgICRjYWxsYWJsZSA9IFskY2xhc3MsICRtZXRob2RdOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICRyID0gbmV3IFxSZWZsZWN0aW9uRnVuY3Rpb24oJGNhbGxhYmxlKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiAkdGhpcy0+cmVmbGVjdG9yID0gWyRyLCAkY2FsbGFibGVdOwogICAgfQp9CgpjbGFzc19hbGlhcygnVHdpZ1xOb2RlXEV4cHJlc3Npb25cQ2FsbEV4cHJlc3Npb24nLCAnVHdpZ19Ob2RlX0V4cHJlc3Npb25fQ2FsbCcpOwoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YToxOntzOjIxOiJcVHdpZ1xOb2RlXEV4cHJlc3Npb24iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoyMToiXFR3aWdcTm9kZVxFeHByZXNzaW9uIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTA6IkV4cHJlc3Npb24iO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MTp7czozNjoiXFR3aWdcTm9kZVxFeHByZXNzaW9uXENhbGxFeHByZXNzaW9uIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXyI6MTE6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjM2OiJcVHdpZ1xOb2RlXEV4cHJlc3Npb25cQ2FsbEV4cHJlc3Npb24iO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNDoiQ2FsbEV4cHJlc3Npb24iO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AZG9jQmxvY2siO047czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGFic3RyYWN0IjtiOjE7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAHBhcmVudCI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQwOiJcVHdpZ1xOb2RlXEV4cHJlc3Npb25cQWJzdHJhY3RFeHByZXNzaW9uIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTg6IkFic3RyYWN0RXhwcmVzc2lvbiI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBpbXBsZW1lbnRzIjthOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AY29uc3RhbnRzIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AcHJvcGVydGllcyI7YToxOntzOjQ4OiJcVHdpZ1xOb2RlXEV4cHJlc3Npb25cQ2FsbEV4cHJlc3Npb246OiRyZWZsZWN0b3IiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkiOjg6e3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDg6IlxUd2lnXE5vZGVcRXhwcmVzc2lvblxDYWxsRXhwcmVzc2lvbjo6JHJlZmxlY3RvciI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjk6InJlZmxlY3RvciI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGRvY0Jsb2NrIjtOO3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHR5cGVzIjthOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBkZWZhdWx0IjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHN0YXRpYyI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjE7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZSI7Tjt9fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBtZXRob2RzIjthOjY6e3M6NTU6IlxUd2lnXE5vZGVcRXhwcmVzc2lvblxDYWxsRXhwcmVzc2lvbjo6Y29tcGlsZUNhbGxhYmxlKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTU6IlxUd2lnXE5vZGVcRXhwcmVzc2lvblxDYWxsRXhwcmVzc2lvbjo6Y29tcGlsZUNhbGxhYmxlKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNToiY29tcGlsZUNhbGxhYmxlIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo5OiJwcm90ZWN0ZWQiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjg6ImNvbXBpbGVyIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MTQ6IlxUd2lnXENvbXBpbGVyIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6ODoiQ29tcGlsZXIiO319czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjM7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo1NjoiXFR3aWdcTm9kZVxFeHByZXNzaW9uXENhbGxFeHByZXNzaW9uOjpjb21waWxlQXJndW1lbnRzKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTY6IlxUd2lnXE5vZGVcRXhwcmVzc2lvblxDYWxsRXhwcmVzc2lvbjo6Y29tcGlsZUFyZ3VtZW50cygpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTY6ImNvbXBpbGVBcmd1bWVudHMiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjk6InByb3RlY3RlZCI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6Mjp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6ODoiY29tcGlsZXIiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxNDoiXFR3aWdcQ29tcGlsZXIiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo4OiJDb21waWxlciI7fX1zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjE7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo3OiJpc0FycmF5IjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7czo1OiJmYWxzZSI7czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjY0O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6NTI6IlxUd2lnXE5vZGVcRXhwcmVzc2lvblxDYWxsRXhwcmVzc2lvbjo6Z2V0QXJndW1lbnRzKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTI6IlxUd2lnXE5vZGVcRXhwcmVzc2lvblxDYWxsRXhwcmVzc2lvbjo6Z2V0QXJndW1lbnRzKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMjoiZ2V0QXJndW1lbnRzIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo5OiJwcm90ZWN0ZWQiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjI6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjg6ImNhbGxhYmxlIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aToxO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6OToiYXJndW1lbnRzIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTE2O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6NTM6IlxUd2lnXE5vZGVcRXhwcmVzc2lvblxDYWxsRXhwcmVzc2lvbjo6bm9ybWFsaXplTmFtZSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjUzOiJcVHdpZ1xOb2RlXEV4cHJlc3Npb25cQ2FsbEV4cHJlc3Npb246Om5vcm1hbGl6ZU5hbWUoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEzOiJub3JtYWxpemVOYW1lIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo5OiJwcm90ZWN0ZWQiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjQ6Im5hbWUiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyNDE7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo2MToiXFR3aWdcTm9kZVxFeHByZXNzaW9uXENhbGxFeHByZXNzaW9uOjpnZXRDYWxsYWJsZVBhcmFtZXRlcnMoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo2MToiXFR3aWdcTm9kZVxFeHByZXNzaW9uXENhbGxFeHByZXNzaW9uOjpnZXRDYWxsYWJsZVBhcmFtZXRlcnMoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjIxOiJnZXRDYWxsYWJsZVBhcmFtZXRlcnMiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjI6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjg6ImNhbGxhYmxlIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aToxO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6MTA6ImlzVmFyaWFkaWMiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xCb29sZWFuIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjQ2O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQXJyYXlfIjozOntzOjEyOiIAKgB2YWx1ZVR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjEwOiIAKgBrZXlUeXBlIjtOO3M6MTc6IgAqAGRlZmF1bHRLZXlUeXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29tcG91bmQiOjI6e3M6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdHlwZXMiO2E6Mjp7aTowO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9aToxO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9fXM6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdG9rZW4iO3M6MToifCI7fX19czo1NToiXFR3aWdcTm9kZVxFeHByZXNzaW9uXENhbGxFeHByZXNzaW9uOjpyZWZsZWN0Q2FsbGFibGUoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1NToiXFR3aWdcTm9kZVxFeHByZXNzaW9uXENhbGxFeHByZXNzaW9uOjpyZWZsZWN0Q2FsbGFibGUoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE1OiJyZWZsZWN0Q2FsbGFibGUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjg6ImNhbGxhYmxlIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjkwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fX1zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AdXNlZFRyYWl0cyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxOTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO319fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fX0=";